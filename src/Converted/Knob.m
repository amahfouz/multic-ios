//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Knob.java
//
//  Created by amahfouz on 6/4/14.
//

#include "IOSClass.h"
#include "java/lang/IllegalArgumentException.h"

#import "Knob.h"

@implementation MMCKnob

+ (BOOL)isValidPosWithInt:(int)pos {
  return pos >= MMCKnob_MIN_FACTOR && pos <= MMCKnob_MAX_FACTOR;
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "isValidPosWithInt:", "isValidPos", "Z", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "MIN_FACTOR_", NULL, 0x1a, "I", NULL, .constantValue.asInt = MMCKnob_MIN_FACTOR },
    { "MAX_FACTOR_", NULL, 0x19, "I", NULL, .constantValue.asInt = MMCKnob_MAX_FACTOR },
  };
  static J2ObjcClassInfo _MMCKnob = { "Knob", "com.mahfouz.multic.core", NULL, 0x11, 2, methods, 2, fields, 0, NULL};
  return &_MMCKnob;
}

@end

BOOL MMCKnob_LocationEnum_initialized = NO;

MMCKnob_LocationEnum *MMCKnob_LocationEnum_values[2];

@implementation MMCKnob_LocationEnum

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)label
          withNSString:(NSString *)__name
               withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    self->label_ = label;
  }
  return self;
}

- (NSString *)getLabel {
  return label_;
}

+ (void)initialize {
  if (self == [MMCKnob_LocationEnum class]) {
    MMCKnob_LocationEnum_TOP = [[MMCKnob_LocationEnum alloc] initWithNSString:@"top" withNSString:@"TOP" withInt:0];
    MMCKnob_LocationEnum_BOTTOM = [[MMCKnob_LocationEnum alloc] initWithNSString:@"bottom" withNSString:@"BOTTOM" withInt:1];
    MMCKnob_LocationEnum_initialized = YES;
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithObjects:MMCKnob_LocationEnum_values count:2 type:[IOSClass classWithClass:[MMCKnob_LocationEnum class]]];
}

+ (MMCKnob_LocationEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < 2; i++) {
    MMCKnob_LocationEnum *e = MMCKnob_LocationEnum_values[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Location", NULL, 0x2, NULL },
    { "getLabel", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const char *superclass_type_args[] = {"Lcom.mahfouz.multic.core.Knob$Location;"};
  static J2ObjcClassInfo _MMCKnob_LocationEnum = { "Location", "com.mahfouz.multic.core", "Knob", 0x4019, 2, methods, 0, NULL, 1, superclass_type_args};
  return &_MMCKnob_LocationEnum;
}

@end

@implementation MMCKnob_Pos

- (id)initWithInt:(int)pos {
  if (self = [super init]) {
    if (![MMCKnob isValidPosWithInt:pos]) @throw [[JavaLangIllegalArgumentException alloc] init];
    self->pos_ = pos;
  }
  return self;
}

- (int)get {
  return pos_;
}

- (void)setWithInt:(int)newPos {
  if (![MMCKnob isValidPosWithInt:newPos]) @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Invalid position (%d).", newPos]];
  if (newPos == pos_) @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"New position same as current."];
  self->pos_ = newPos;
}

- (void)copyAllFieldsTo:(MMCKnob_Pos *)other {
  [super copyAllFieldsTo:other];
  other->pos_ = pos_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "Pos", NULL, 0x1, NULL },
    { "get", NULL, "I", 0x1, NULL },
    { "setWithInt:", "set", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "pos_", NULL, 0x2, "I", NULL,  },
  };
  static J2ObjcClassInfo _MMCKnob_Pos = { "Pos", "com.mahfouz.multic.core", "Knob", 0x19, 3, methods, 1, fields, 0, NULL};
  return &_MMCKnob_Pos;
}

@end
