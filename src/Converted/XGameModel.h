//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: XGameModel.java
//
//  Created by amahfouz on 6/4/14.
//

#ifndef _MMU_XGameModel_H_
#define _MMU_XGameModel_H_

@class IOSIntArray;
@class MMCDifficultyEnum;
@class MMCKnob_LocationEnum;
@class MMCMutableGameState;
@class MMCPlayerEnum;
@protocol MMUMulticLog;
@protocol MMUXGameGridUiModel;
@protocol MMUXGameModel_Listener;

#import "JreEmulation.h"
#include "java/lang/Runnable.h"


/**
 @brief Model for the game as seen by the UI.
 */
@interface MMUXGameModel : NSObject {
 @public
  MMCMutableGameState *gameState_;
  id<MMUMulticLog> log_;
  id<MMUXGameModel_Listener> listener_;
}

- (id)initWithMMCDifficultyEnum:(MMCDifficultyEnum *)difficulty
     withMMUXGameModel_Listener:(id<MMUXGameModel_Listener>)listener
                    withBoolean:(BOOL)randomFirstPos
                  withFirstTurn:(BOOL)humanStarts
               withMMUMulticLog:(id<MMUMulticLog>)log;

/**
 @brief Returns the player who has to make a move, or null if the game has ended (either with a win or a draw).
 */

- (MMCPlayerEnum *)getTurnPlayer;

- (id<MMUXGameGridUiModel>)getGridUiModel;

- (int)getSelectedIndexFor:(MMCKnob_LocationEnum *)knobLoc;

- (MMCPlayerEnum *)getWinnerIfAny;

- (IOSIntArray *)getWinningFourIfAny;

- (void)setListenerWithMMUXGameModel_Listener:(id<MMUXGameModel_Listener>)listener;

- (MMCDifficultyEnum *)getDifficulty;

/**
 @brief Performs user move. 
 Synchronized access on class.
 */

- (void)makeUserMoveWithMMCKnob_LocationEnum:(MMCKnob_LocationEnum *)knobLoc
                                     withInt:(int)pos;

/**
 @brief Check whether game has ended. 
 Check that either: - A four has been formed by the last move. - No more moves are possible.
 */

- (BOOL)gameHasEnded;

- (BOOL)hasValidMoves;

- (void)findComputerMove;

/**
 @brief Performs computer move. 
 Synchronized access on class.
 */

- (void)performComputerMove;

- (void)copyAllFieldsTo:(MMUXGameModel *)other;

@end

FOUNDATION_EXPORT BOOL MMUXGameModel_initialized;
J2OBJC_STATIC_INIT(MMUXGameModel)

J2OBJC_FIELD_SETTER(MMUXGameModel, gameState_, MMCMutableGameState *)
J2OBJC_FIELD_SETTER(MMUXGameModel, log_, id<MMUMulticLog>)
J2OBJC_FIELD_SETTER(MMUXGameModel, listener_, id<MMUXGameModel_Listener>)

FOUNDATION_EXPORT MMCDifficultyEnum *MMUXGameModel_DEFAULT_DIFFICULTY_;
J2OBJC_STATIC_FIELD_GETTER(MMUXGameModel, DEFAULT_DIFFICULTY_, MMCDifficultyEnum *)

typedef MMUXGameModel ComMahfouzMulticUimXGameModel;

@protocol MMUXGameModel_Listener < NSObject, JavaObject >

- (void)cellStateChangedWithInt:(int)gridCellIfAny;

- (void)knobStateChangedWithMMCKnob_LocationEnum:(MMCKnob_LocationEnum *)knobLoc;

@end

__attribute__((always_inline)) inline void MMUXGameModel_Listener_init() {}

@interface MMUXGameModel_$1 : NSObject < JavaLangRunnable > {
 @public
  MMUXGameModel *this$0_;
}

- (void)run;

- (id)initWithMMUXGameModel:(MMUXGameModel *)outer$;

@end

__attribute__((always_inline)) inline void MMUXGameModel_$1_init() {}

J2OBJC_FIELD_SETTER(MMUXGameModel_$1, this$0_, MMUXGameModel *)

#endif // _MMU_XGameModel_H_
