//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Player.java
//
//  Created by amahfouz on 6/4/14.
//

#include "Four.h"
#include "IOSClass.h"
#include "java/lang/IllegalArgumentException.h"

#import "Player.h"

BOOL MMCPlayerEnum_initialized = NO;

MMCPlayerEnum *MMCPlayerEnum_values[2];

@implementation MMCPlayerEnum

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithInt:(int)valueOfFourInRow
     withNSString:(NSString *)__name
          withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    self->valueOfFourInRow_ = valueOfFourInRow;
  }
  return self;
}

- (int)valueOfFour {
  return valueOfFourInRow_;
}

+ (void)initialize {
  if (self == [MMCPlayerEnum class]) {
    MMCPlayerEnum_COMPUTER = [[MMCPlayerEnum alloc] initWithInt:MMCFour_VALUE_WIN withNSString:@"COMPUTER" withInt:0];
    MMCPlayerEnum_HUMAN = [[MMCPlayerEnum alloc] initWithInt:-MMCFour_VALUE_WIN withNSString:@"HUMAN" withInt:1];
    MMCPlayerEnum_initialized = YES;
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithObjects:MMCPlayerEnum_values count:2 type:[IOSClass classWithClass:[MMCPlayerEnum class]]];
}

+ (MMCPlayerEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < 2; i++) {
    MMCPlayerEnum *e = MMCPlayerEnum_values[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "Player", NULL, 0x2, NULL },
    { "valueOfFour", NULL, "I", 0x1, NULL },
  };
  static const char *superclass_type_args[] = {"Lcom.mahfouz.multic.core.Player;"};
  static J2ObjcClassInfo _MMCPlayerEnum = { "Player", "com.mahfouz.multic.core", NULL, 0x4011, 2, methods, 0, NULL, 1, superclass_type_args};
  return &_MMCPlayerEnum;
}

@end
