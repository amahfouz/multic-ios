//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: BoardState.java
//
//  Created by amahfouz on 6/4/14.
//

#ifndef _MMC_BoardState_H_
#define _MMC_BoardState_H_

@class IOSIntArray;
@class IOSObjectArray;
@class MMCFour;
@class MMCMulticGameCell;
@class MMCPlayerEnum;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "XGameGridUiModel.h"


/**
 @brief State of the game board
 */
@interface MMCBoardState : NSObject < MMUXGameGridUiModel > {
 
    @public  IOSObjectArray *cellValues_;
}

- (id)init;

/**
 @brief Evaluates the current position. 
 At least considers: - State of fours Depending on difficulty level may consider: - Overlaps between fours (two fours completed by the same cell) - Knob values that the other player can't use or else he would lose immediately (those that are a factor in a cell which would complete a four that is currently three-in-a-row)
 @return a positive value to indicate position is favorable to computer, negative value to indicate position is favorable to player. The larger the value, the more favorable.
 */

- (int)evaluateWithBoolean:(BOOL)doAdvancedEval;

- (MMCPlayerEnum *)getWinnerIfAnyWithInt:(int)product;

- (IOSIntArray *)getWinningFourIfAny;

- (MMCMulticGameCell *)getCellStateWithInt:(int)product;

- (BOOL)isEmptyCellWithInt:(int)product;

- (int)getNumCells;

- (NSString *)getCellContentWithInt:(int)index;

- (MMCPlayerEnum *)getCellOccupantIfAnyWithInt:(int)index;

/**
 @brief Fills the specified empty cell with the
 */

- (void)fillCellWithInt:(int)product
      withMMCPlayerEnum:(MMCPlayerEnum *)value;

- (IOSObjectArray *)getCellValues;

/**
 @brief Returns true if the winning cell index is included in the specified cell indices.
 */

- (BOOL)isDuplicate4thCellWithMMCFour:(MMCFour *)fourWithThreeInRow
                     withJavaUtilList:(id<JavaUtilList>)factors
                     withJavaUtilList:(id<JavaUtilList>)cellIndices;

- (void)copyAllFieldsTo:(MMCBoardState *)other;

@end

__attribute__((always_inline)) inline void MMCBoardState_init() {}

J2OBJC_FIELD_SETTER(MMCBoardState, cellValues_, IOSObjectArray *)

typedef MMCBoardState ComMahfouzMulticCoreBoardState;

#endif // _MMC_BoardState_H_
